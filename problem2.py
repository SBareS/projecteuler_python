"""
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the 
previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not 
exceed four million, find the sum of the even-valued terms.
"""


import math

sqrt5 = math.sqrt(5)
phi = (1 + sqrt5)/2

# Result can be found as the sum of a geometric series, if one knows 
# binet's formula. First we calculate the index of the last term
upper_limit = 4_000_000
last_index = math.ceil(math.log(upper_limit * sqrt5, phi))

# Then we sum phi**(3*k) (which are the even terms), noting that the 
# contribution from psi**(3*k) is less than 1
sum_even_fib = math.floor((phi**(last_index + 3) - 1)/(sqrt5 * (phi**3 + 1)))
print(sum_even_fib)
correct_answer = "4613732"